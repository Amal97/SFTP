package server;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.attribute.BasicFileAttributes;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class MyFiles {
	
	private String convertToDate(long time) {
		Date d = new Date(time);
		return d.toString();

	}

	
	private String path = "C:\\Users\\Amal\\Downloads\\Uni\\Semester 2\\COMPSYS 725\\Assignments\\Assignment-1\\SFTP\\";
	
	public String listAllFiles(String dir, String format) {
		String fullPath = path+dir+"\\";
		try (Stream<Path> walk = Files.walk(Paths.get(fullPath))) {
			String allFiles = fullPath+"\r\n" ;

	        File folder = new File(dir);
	        File[] listOfFiles = folder.listFiles();
			
			List<String> result = walk.filter(Files::isRegularFile)
					.map(x -> x.toString()).collect(Collectors.toList());
		if(format.equals("F")) {
			for(int i = 0; i < result.size(); i++) {
				String file = result.get(i).replace(fullPath, "");
				allFiles = allFiles + file + "\r\n";
			}
			return allFiles;
		}
		else {
			for(int i = 0; i < result.size(); i++) {
				String file = result.get(i).replace(fullPath, "");

                BasicFileAttributes info = Files.readAttributes(Paths.get(listOfFiles[i].getPath()), BasicFileAttributes.class);

                DateFormat df = new SimpleDateFormat("HH:mm:ss dd/MM/yyyy");
                String creationTime = "file created time" + df.format(info.creationTime().toMillis());
                String lastAccessTime = "file last accessed time" + df.format(info.lastAccessTime().toMillis());
                String lastModifiedTime = "file last modified time" + df.format(info.lastModifiedTime().toMillis());

                allFiles = allFiles + file + " " + creationTime + " " + lastAccessTime + " " + lastModifiedTime + "\r\n";
                
				//allFiles = allFiles + file + " " + lastModified + "\r\n";
			}
			return allFiles;
		}

		} catch (IOException e) {
			e.printStackTrace();
			return "No Files Found";
		}
	}

}
